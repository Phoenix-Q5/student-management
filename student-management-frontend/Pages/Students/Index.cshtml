@page
@model StudentManagement.Pages.Students.IndexModel
@{
    ViewData["Title"] = "Students";
}

<h1>Manage Students</h1>

<form method="post" id="deleteForm">
    <div class="actions" style="display: flex; justify-content: space-between; align-items: center;">
        <a class="btn btn-primary" asp-page="Add">Add Student</a>
        <input type="text" placeholder="Search..." oninput="filterTable()" id="searchBox" style="margin-left: auto;" />
    </div>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Select</th>
                <th>Name</th>
                <th>School</th>
                <th>Major</th>
                <th>Date Modified</th>
                <th>Active</th>
            </tr>
        </thead>
        <tbody id="studentsTable">
            @foreach (var student in Model.Students)
            {
                <tr>
                    <td>
                        <input type="checkbox" class="selectStudent" value="@student.Id" />
                    </td>
                    <td><a asp-page="Edit" asp-route-id="@student.Id">@student.LastName, @student.FirstName</a></td>
                    <td>@student.School</td>
                    <td>@student.Major</td>
                    <td>@student.DateModified.ToString("yyyy-MM-dd")</td>
                    <td>@student.IsActive</td>
                </tr>
            }
        </tbody>
    </table>

    <div style="margin-top: 10px; display: flex; justify-content: space-between; align-items: center;">
        <button type="button" class="btn btn-danger" onclick="deleteSelected()">Delete Selected</button>
        <div>
            <label for="pageSize">Rows per page:</label>
            <select id="pageSize" onchange="updatePagination()">
                <option value="10" selected>10</option>
                <option value="20">20</option>
                <option value="30">30</option>
            </select>
        </div>
    </div>

    <div class="pagination" style="display: flex; justify-content: center; margin-top: 20px;">
    </div>
</form>

<script>
    let studentsPerPage = 10;
    let currentPage = 1;

    function updatePagination() {
        studentsPerPage = parseInt(document.getElementById('pageSize').value);
        currentPage = 1; 
        paginateTable();
    }

    function paginateTable() {
        const rows = document.querySelectorAll('#studentsTable tr');
        const totalRows = rows.length;
        const totalPages = Math.ceil(totalRows / studentsPerPage);

        rows.forEach((row, index) => {
            row.style.display = (index >= (currentPage - 1) * studentsPerPage && index < currentPage * studentsPerPage) ? '' : 'none';
        });

        document.getElementById('currentPage').innerText = currentPage;
        document.getElementById('prevPage').disabled = currentPage === 1;
        document.getElementById('nextPage').disabled = currentPage === totalPages;
    }

    function previousPage() {
        if (currentPage > 1) {
            currentPage--;
            paginateTable();
        }
    }

    function nextPage() {
        const rows = document.querySelectorAll('#studentsTable tr');
        const totalPages = Math.ceil(rows.length / studentsPerPage);

        if (currentPage < totalPages) {
            currentPage++;
            paginateTable();
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        paginateTable(); 
    });

    async function deleteSelected() {
        const selectedIds = Array.from(document.querySelectorAll('.selectStudent:checked')).map(cb => cb.value);

        if (selectedIds.length === 0) {
            alert('Please select at least one student to delete.');
            return;
        }

        if (!confirm('Are you sure you want to delete the selected students?')) {
            return;
        }

        for (const id of selectedIds) {
            const response = await fetch(`https://localhost:7231/api/Students/${id}`, {
                method: 'DELETE'
            });

            if (!response.ok) {
                alert(`Failed to delete student with ID ${id}.`);
                return;
            }
        }

        alert('Selected students have been deleted successfully.');
        location.reload();
    }

    function filterTable() {
        const searchInput = document.getElementById('searchBox').value.toLowerCase();
        const rows = document.querySelectorAll('#studentsTable tr');

        rows.forEach(row => {
            const name = row.querySelector('td:nth-child(2)').innerText.toLowerCase();
            row.style.display = name.includes(searchInput) ? '' : 'none';
        });
    }
</script>
